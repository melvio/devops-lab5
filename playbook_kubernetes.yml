# This playbook is compatible with Ansible version 2.9.6
- hosts: all
  become: true
  gather_facts: False
  tasks:
    - name: Bootstrap a host without python2 installed
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python)

    - name: Update apt-cache
      apt:
        update_cache: yes  # equivalent to `apt-get update`

    - name: Install packages
      apt:
        pkg:
        - containerd
        - apt-transport-https


    - name: Add google cloud apt signing key
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add kubernetes repository
      ansible.builtin.apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main # works like `apt-add-repository`

    - name: Install kubernetes packages
      apt:
        pkg:
          - kubelet
          - kubeadm
          - kubernetes-cni


- hosts: k8-master
  become: true
  tasks:
    - name: Probe the br_netfilter kernel module
      shell: modprobe br_netfilter

    - name: Create a network bridge
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: '1'
        sysctl_set: yes

    - name: Enable IP forwarding
      sysctl:
        name: net.ipv4.ip_forward
        value: '1'

    - name: Reset kubeadm (this allows us to run `kubeadm init` every time)
      shell: kubeadm reset --force

    - name: Create a .kube directory
      file:
        path: /home/ubuntu/.kube
        state: directory
        mode: '0755'

    - name: Initialize kubeadm
      # latest version of Ansible supports the `ansible.builtin.shell` key, the stable version needs the `shell` key
      shell: kubeadm init

    - name: Copy admin.conf
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ubuntu/.kube/config
        remote_src: yes
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"
        mode: '0644'

    - name: Install the kubernetes Weave Net addon
      shell: KUBECONFIG=/home/ubuntu/.kube/config kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"








# for later:
#- hosts: k8-master
#  become: true
#  tasks:
#    - name: Kubernetes Metrics Server
#      shell: kubectl apply -f https://gist.githubusercontent.com/r-whites/ac8464d7422768bbae96db1f2cd59490/raw/d0aab539844b24a0f954ed4fd78476c83f99b241/components.yaml

#[4:10 PM] Jeffrey vd Lingen: Anyhows, I managed to get the metrics server working, just gotto figure out how to do it in Ansible
#[4:11 PM] Jeffrey vd Lingen: The general gist is to throw away their instructions and simply run kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml, but
# that won't work directly as the TLS will complain due to self-signed certificates.
#  You can disable this by downloading the components file instead and adding --kubelet-insecure-tls to the args of the Deployment in the YAML file
